{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/software/work/Challenge/src/Gestures/GesturesFinal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PanGestureHandler } from \"react-native-gesture-handler\";\nimport { diffClamp, usePanGestureHandler, withDecay } from \"react-native-redash\";\nimport Animated, { Extrapolate, add, interpolate } from \"react-native-reanimated\";\nimport { Card, CARD_HEIGHT as DEFAULT_CARD_HEIGHT, cards } from \"../components\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height;\n\nvar MARGIN = 16;\nvar CARD_HEIGHT = DEFAULT_CARD_HEIGHT + MARGIN * 2;\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: \"center\",\n    marginTop: 30\n  }),\n  card: {\n    marginVertical: MARGIN\n  }\n});\n\nvar Wallet = function Wallet() {\n  var _useState = useState(height),\n      _useState2 = _slicedToArray(_useState, 2),\n      containerHeight = _useState2[0],\n      setContainerHeight = _useState2[1];\n\n  var _usePanGestureHandler = usePanGestureHandler(),\n      gestureHandler = _usePanGestureHandler.gestureHandler,\n      translation = _usePanGestureHandler.translation,\n      velocity = _usePanGestureHandler.velocity,\n      state = _usePanGestureHandler.state;\n\n  var visibleCards = Math.floor(containerHeight / CARD_HEIGHT);\n  var y = diffClamp(withDecay({\n    value: translation.y,\n    velocity: velocity.y,\n    state: state\n  }), 0, +cards.length * CARD_HEIGHT - visibleCards * CARD_HEIGHT + 150);\n  return React.createElement(View, {\n    style: styles.container,\n    onLayout: function onLayout(_ref) {\n      var h = _ref.nativeEvent.layout.height;\n      return setContainerHeight(h);\n    }\n  }, React.createElement(PanGestureHandler, gestureHandler, React.createElement(Animated.View, null, cards.map(function (card, index) {\n    var positionY = add(y, index * CARD_HEIGHT);\n    var isDisappearing = -CARD_HEIGHT;\n    var isOnTop = 0;\n    var isOnBottom = (visibleCards - 1) * CARD_HEIGHT;\n    var isAppearing = visibleCards * CARD_HEIGHT;\n    var extraTranslationY = interpolate(positionY, {\n      inputRange: [isOnBottom, isAppearing],\n      outputRange: [0, -CARD_HEIGHT / 4],\n      extrapolate: Extrapolate.CLAMP\n    });\n    var translateY = add(interpolate(y, {\n      inputRange: [-CARD_HEIGHT * index, 0],\n      outputRange: [-(CARD_HEIGHT - 35) * index, 0],\n      extrapolate: Extrapolate.CLAMP\n    }), extraTranslationY);\n    var scale = interpolate(positionY, {\n      inputRange: [isDisappearing, isOnTop, isOnBottom, isAppearing],\n      outputRange: [1, 1, 1, 0.5],\n      extrapolate: Extrapolate.CLAMP\n    });\n    var opacity = interpolate(positionY, {\n      inputRange: [isDisappearing, isOnTop, isOnBottom, isAppearing],\n      outputRange: [1, 1, 1, 1]\n    });\n    return React.createElement(Animated.View, {\n      key: index,\n      style: [index === 0 ? {} : styles.card, {\n        position: \"relative\",\n        zIndex: -index\n      }, {\n        opacity: opacity,\n        transform: [{\n          translateY: translateY\n        }]\n      }]\n    }, React.createElement(Card, {\n      card: card\n    }));\n  }))));\n};\n\nexport default Wallet;","map":{"version":3,"sources":["/home/software/work/Challenge/src/Gestures/GesturesFinal.tsx"],"names":["React","useState","PanGestureHandler","diffClamp","usePanGestureHandler","withDecay","Animated","Extrapolate","add","interpolate","Card","CARD_HEIGHT","DEFAULT_CARD_HEIGHT","cards","Dimensions","get","height","MARGIN","styles","StyleSheet","create","container","absoluteFillObject","alignItems","marginTop","card","marginVertical","Wallet","containerHeight","setContainerHeight","gestureHandler","translation","velocity","state","visibleCards","Math","floor","y","value","length","h","nativeEvent","layout","map","index","positionY","isDisappearing","isOnTop","isOnBottom","isAppearing","extraTranslationY","inputRange","outputRange","extrapolate","CLAMP","translateY","scale","opacity","position","zIndex","transform"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\n\nimport { PanGestureHandler } from \"react-native-gesture-handler\";\nimport {\n  diffClamp,\n  translate,\n  usePanGestureHandler,\n  withDecay,\n  withOffset,\n} from \"react-native-redash\";\nimport Animated, {\n  Extrapolate,\n  add,\n  interpolate,\n} from \"react-native-reanimated\";\nimport {\n  CARD_WIDTH,\n  Card,\n  CARD_HEIGHT as DEFAULT_CARD_HEIGHT,\n  cards,\n} from \"../components\";\n\nconst { height } = Dimensions.get(\"window\");\n// const MARGIN = 16;\nconst MARGIN = 16;\nconst CARD_HEIGHT = DEFAULT_CARD_HEIGHT + MARGIN * 2;\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: \"center\",\n    marginTop: 30,\n  },\n  card: {\n    marginVertical: MARGIN,\n  },\n});\n\nconst Wallet = () => {\n  const [containerHeight, setContainerHeight] = useState(height);\n  const {\n    gestureHandler,\n    translation,\n    velocity,\n    state,\n  } = usePanGestureHandler();\n  const visibleCards = Math.floor(containerHeight / CARD_HEIGHT);\n  const y = diffClamp(\n    withDecay({\n      value: translation.y,\n      velocity: velocity.y,\n      state,\n    }),\n    0,\n    +cards.length * CARD_HEIGHT - visibleCards * CARD_HEIGHT + 150\n  );\n  return (\n    <View\n      style={styles.container}\n      onLayout={({\n        nativeEvent: {\n          layout: { height: h },\n        },\n      }) => setContainerHeight(h)}\n    >\n      <PanGestureHandler {...gestureHandler}>\n        <Animated.View>\n          {cards.map((card, index) => {\n            const positionY = add(y, index * CARD_HEIGHT);\n            const isDisappearing = -CARD_HEIGHT;\n            const isOnTop = 0;\n            // const isOnBottom = (visibleCards - 1) * CARD_HEIGHT;\n            const isOnBottom = (visibleCards - 1) * CARD_HEIGHT;\n            const isAppearing = visibleCards * CARD_HEIGHT;\n            const extraTranslationY = interpolate(positionY, {\n              inputRange: [isOnBottom, isAppearing],\n              outputRange: [0, -CARD_HEIGHT / 4],\n              extrapolate: Extrapolate.CLAMP,\n            });\n            const translateY = add(\n              interpolate(y, {\n                inputRange: [-CARD_HEIGHT * index, 0],\n                outputRange: [-(CARD_HEIGHT - 35) * index, 0],\n                extrapolate: Extrapolate.CLAMP,\n              }),\n              extraTranslationY\n            );\n            const scale = interpolate(positionY, {\n              inputRange: [isDisappearing, isOnTop, isOnBottom, isAppearing],\n              outputRange: [1, 1, 1, 0.5],\n              extrapolate: Extrapolate.CLAMP,\n            });\n            const opacity = interpolate(positionY, {\n              inputRange: [isDisappearing, isOnTop, isOnBottom, isAppearing],\n              outputRange: [1, 1, 1, 1],\n              // outputRange: [0.5, 1, 1, 0.5],\n            });\n            return (\n              <Animated.View\n                key={index}\n                style={[\n                  // styles.card,\n                  index === 0 ? {} : styles.card,\n                  { position: \"relative\", zIndex: -index },\n                  { opacity, transform: [{ translateY }] },\n                  // { opacity, transform: [{ translateY }, { scale }] },\n                ]}\n              >\n                <Card {...{ card }} />\n              </Animated.View>\n            );\n          })}\n        </Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n};\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}