{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/software/work/Challenge/src/components/Thumbnail.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-reanimated\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport StyleGuide from \"./StyleGuide\";\nimport Text from \"./Text\";\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: StyleGuide.spacing * 2,\n    marginVertical: StyleGuide.spacing,\n    borderRadius: 8,\n    flex: 1,\n    height: 150,\n    overflow: \"hidden\",\n    backgroundColor: StyleGuide.palette.backgroundPrimary\n  },\n  image: {\n    borderRadius: 8,\n    width: undefined,\n    height: 150,\n    resizeMode: \"contain\"\n  },\n  content: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    padding: StyleGuide.spacing,\n    justifyContent: \"flex-end\"\n  })\n});\n\nvar Thumbnail = function Thumbnail(_ref) {\n  var title = _ref.title,\n      source = _ref.source,\n      onPress = _ref.onPress;\n  return React.createElement(RectButton, {\n    onPress: onPress\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Animated.Image, _extends({\n    style: styles.image\n  }, {\n    source: source\n  })), React.createElement(View, {\n    style: styles.content\n  }, React.createElement(Text, {\n    type: \"title3\"\n  }, title))));\n};\n\nexport default Thumbnail;","map":{"version":3,"sources":["/home/software/work/Challenge/src/components/Thumbnail.tsx"],"names":["React","Animated","RectButton","StyleGuide","Text","styles","StyleSheet","create","container","marginHorizontal","spacing","marginVertical","borderRadius","flex","height","overflow","backgroundColor","palette","backgroundPrimary","image","width","undefined","resizeMode","content","absoluteFillObject","padding","justifyContent","Thumbnail","title","source","onPress"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,gBAAgB,EAAEN,UAAU,CAACO,OAAX,GAAqB,CAD9B;AAETC,IAAAA,cAAc,EAAER,UAAU,CAACO,OAFlB;AAGTE,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,IAAI,EAAE,CAJG;AAKTC,IAAAA,MAAM,EAAE,GALC;AAMTC,IAAAA,QAAQ,EAAE,QAND;AAOTC,IAAAA,eAAe,EAAEb,UAAU,CAACc,OAAX,CAAmBC;AAP3B,GADoB;AAU/BC,EAAAA,KAAK,EAAE;AACLP,IAAAA,YAAY,EAAE,CADT;AAELQ,IAAAA,KAAK,EAAEC,SAFF;AAGLP,IAAAA,MAAM,EAAE,GAHH;AAILQ,IAAAA,UAAU,EAAE;AAJP,GAVwB;AAgB/BC,EAAAA,OAAO,kCACFjB,UAAU,CAACkB,kBADT;AAELC,IAAAA,OAAO,EAAEtB,UAAU,CAACO,OAFf;AAGLgB,IAAAA,cAAc,EAAE;AAHX;AAhBwB,CAAlB,CAAf;;AA6BA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAgD;AAAA,MAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCC,MAAsC,QAAtCA,MAAsC;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;AAChE,SACE,oBAAC,UAAD,EAAgB;AAAEA,IAAAA,OAAO,EAAPA;AAAF,GAAhB,EACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACG;AAApB,KACE,oBAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,KAAK,EAAEH,MAAM,CAACc;AAA9B,KAAyC;AAAEU,IAAAA,MAAM,EAANA;AAAF,GAAzC,EADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACkB;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAqBK,KAArB,CADF,CAFF,CADF,CADF;AAUD,CAXD;;AAaA,eAAeD,SAAf","sourcesContent":["import * as React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport Animated from \"react-native-reanimated\";\n\nimport { RectButton } from \"react-native-gesture-handler\";\nimport StyleGuide from \"./StyleGuide\";\nimport Text from \"./Text\";\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: StyleGuide.spacing * 2,\n    marginVertical: StyleGuide.spacing,\n    borderRadius: 8,\n    flex: 1,\n    height: 150,\n    overflow: \"hidden\",\n    backgroundColor: StyleGuide.palette.backgroundPrimary,\n  },\n  image: {\n    borderRadius: 8,\n    width: undefined,\n    height: 150,\n    resizeMode: \"contain\",\n  },\n  content: {\n    ...StyleSheet.absoluteFillObject,\n    padding: StyleGuide.spacing,\n    justifyContent: \"flex-end\",\n  },\n});\n\ninterface ThumbnailProps {\n  title: string;\n  source: number;\n  onPress: () => void;\n}\n\nconst Thumbnail = ({ title, source, onPress }: ThumbnailProps) => {\n  return (\n    <RectButton {...{ onPress }}>\n      <View style={styles.container}>\n        <Animated.Image style={styles.image} {...{ source }} />\n        <View style={styles.content}>\n          <Text type=\"title3\">{title}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n};\n\nexport default Thumbnail;\n"]},"metadata":{},"sourceType":"module"}