{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/software/work/Challenge/src/theme/feather-icons.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/Feather\";\nexport var FeatherIconsPack = {\n  name: \"feather\",\n  icons: createIconsMap()\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get: function get(target, name) {\n      return IconProvider(name);\n    }\n  });\n}\n\nvar IconProvider = function IconProvider(name) {\n  return {\n    toReactElement: function toReactElement(props) {\n      return FeatherIcon(_objectSpread({\n        name: name\n      }, props));\n    }\n  };\n};\n\nfunction FeatherIcon(_ref) {\n  var name = _ref.name,\n      style = _ref.style,\n      onPress = _ref.onPress;\n\n  var _StyleSheet$flatten = StyleSheet.flatten(style),\n      height = _StyleSheet$flatten.height,\n      tintColor = _StyleSheet$flatten.tintColor,\n      iconStyle = _objectWithoutProperties(_StyleSheet$flatten, [\"height\", \"tintColor\"]);\n\n  return React.createElement(Icon, {\n    onPress: onPress,\n    name: name,\n    size: height,\n    color: tintColor,\n    style: iconStyle\n  });\n}","map":{"version":3,"sources":["/home/software/work/Challenge/src/theme/feather-icons.js"],"names":["React","Icon","FeatherIconsPack","name","icons","createIconsMap","Proxy","get","target","IconProvider","toReactElement","props","FeatherIcon","style","onPress","StyleSheet","flatten","height","tintColor","iconStyle"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,IAAP;AAEA,OAAO,IAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,IAAI,EAAE,SADwB;AAE9BC,EAAAA,KAAK,EAAEC,cAAc;AAFS,CAAzB;;AAKP,SAASA,cAAT,GAA0B;AACxB,SAAO,IAAIC,KAAJ,CACL,EADK,EAEL;AACEC,IAAAA,GADF,eACMC,MADN,EACcL,IADd,EACoB;AAChB,aAAOM,YAAY,CAACN,IAAD,CAAnB;AACD;AAHH,GAFK,CAAP;AAQD;;AAED,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAACN,IAAD;AAAA,SAAW;AAC9BO,IAAAA,cAAc,EAAE,wBAACC,KAAD;AAAA,aAAWC,WAAW;AAAGT,QAAAA,IAAI,EAAJA;AAAH,SAAYQ,KAAZ,EAAtB;AAAA;AADc,GAAX;AAAA,CAArB;;AAIA,SAASC,WAAT,OAA+C;AAAA,MAAxBT,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBU,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAAA,4BACDC,UAAU,CAACC,OAAX,CAAmBH,KAAnB,CADC;AAAA,MACrCI,MADqC,uBACrCA,MADqC;AAAA,MAC7BC,SAD6B,uBAC7BA,SAD6B;AAAA,MACfC,SADe;;AAE7C,SACE,oBAAC,IAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,IAAI,EAAEX,IAFR;AAGE,IAAA,IAAI,EAAEc,MAHR;AAIE,IAAA,KAAK,EAAEC,SAJT;AAKE,IAAA,KAAK,EAAEC;AALT,IADF;AASD","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport Icon from \"react-native-vector-icons/Feather\";\n\nexport const FeatherIconsPack = {\n  name: \"feather\",\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      },\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FeatherIcon({ name, ...props }),\n});\n\nfunction FeatherIcon({ name, style, onPress }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <Icon\n      onPress={onPress}\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}