{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/software/work/rn-first-test/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport { useFonts } from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport { ApplicationProvider, IconRegistry } from \"@ui-kitten/components\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport { FeatherIconsPack } from \"./src/theme/feather-icons\";\nimport { IoniconsIconsPack } from \"./src/theme/Ionicons\";\nimport { FontAwesomeIconsPack } from \"./src/theme/fontawesome\";\nimport { AppNavigator } from \"./src/navigation/navigation\";\nimport { ThemeContext } from \"./src/theme/theme-context\";\nimport { default as themes } from \"./src/theme/custom-theme.json\";\nimport { default as mapping } from \"./mapping.json\";\nvar customFonts = {\n  Proxima: require(\"./assets/fonts/proxima-Regular.ttf\"),\n  ProximaSemi: require(\"./assets/fonts/proxima-SemiBold.ttf\"),\n  ProximaBold: require(\"./assets/fonts/proxima-Bold.otf\"),\n  Vibur: require(\"./assets/fonts/Vibur-Regular.ttf\"),\n  Brassmono: require(\"./assets/fonts/brass-mono.otf\"),\n  Sanfrancisco: require(\"./assets/fonts/SanFrancisco.ttf\"),\n  Sofia: require(\"./assets/fonts/SofiaPro-Medium.ttf\")\n};\n\nvar Loaded = function Loaded() {\n  var _useFonts = useFonts(customFonts),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      isLoaded = _useFonts2[0];\n\n  if (!isLoaded) {\n    return React.createElement(AppLoading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(AppNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default function App() {\n  var _React$useState = React.useState(\"light\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      theme = _React$useState2[0],\n      setTheme = _React$useState2[1];\n\n  var toggleTheme = function toggleTheme() {\n    var nextTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(nextTheme);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(IconRegistry, {\n    icons: [EvaIconsPack, FeatherIconsPack, IoniconsIconsPack, FontAwesomeIconsPack],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: toggleTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(ApplicationProvider, _extends({}, eva, {\n    theme: _objectSpread(_objectSpread({}, eva[theme]), themes),\n    customMapping: mapping,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Loaded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/software/work/rn-first-test/App.js"],"names":["StatusBar","React","eva","useFonts","AppLoading","ApplicationProvider","IconRegistry","EvaIconsPack","FeatherIconsPack","IoniconsIconsPack","FontAwesomeIconsPack","AppNavigator","ThemeContext","default","themes","mapping","customFonts","Proxima","require","ProximaSemi","ProximaBold","Vibur","Brassmono","Sanfrancisco","Sofia","Loaded","isLoaded","App","useState","theme","setTheme","toggleTheme","nextTheme"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,OAAO,IAAIC,MAApB,QAAkC,+BAAlC;AACA,SAASD,OAAO,IAAIE,OAApB,QAAmC,gBAAnC;AAGA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAEC,OAAO,CAAC,oCAAD,CADE;AAElBC,EAAAA,WAAW,EAAED,OAAO,CAAC,qCAAD,CAFF;AAGlBE,EAAAA,WAAW,EAAEF,OAAO,CAAC,iCAAD,CAHF;AAIlBG,EAAAA,KAAK,EAAEH,OAAO,CAAC,kCAAD,CAJI;AAKlBI,EAAAA,SAAS,EAAEJ,OAAO,CAAC,+BAAD,CALA;AAMlBK,EAAAA,YAAY,EAAEL,OAAO,CAAC,iCAAD,CANH;AAOlBM,EAAAA,KAAK,EAAEN,OAAO,CAAC,oCAAD;AAPI,CAApB;;AAUA,IAAMO,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACAtB,QAAQ,CAACa,WAAD,CADR;AAAA;AAAA,MACZU,QADY;;AAEnB,MAAI,CAACA,QAAL,EAAe;AACb,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAPD;;AASA,eAAe,SAASC,GAAT,GAAe;AAAA,wBACF1B,KAAK,CAAC2B,QAAN,CAAe,OAAf,CADE;AAAA;AAAA,MACrBC,KADqB;AAAA,MACdC,QADc;;AAG5B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMC,SAAS,GAAGH,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA/C;AACAC,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACD,GAHD;;AAKA,SACE,0CACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE,CACLzB,YADK,EAELC,gBAFK,EAGLC,iBAHK,EAILC,oBAJK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,WAAW,EAAXA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD,eACM7B,GADN;AAEE,IAAA,KAAK,kCAAOA,GAAG,CAAC2B,KAAD,CAAV,GAAsBf,MAAtB,CAFP;AAGE,IAAA,aAAa,EAAEC,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CATF,CADF;AAsBD","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport * as eva from \"@eva-design/eva\";\nimport { useFonts } from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport { ApplicationProvider, IconRegistry } from \"@ui-kitten/components\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport { FeatherIconsPack } from \"./src/theme/feather-icons\";\nimport { IoniconsIconsPack } from \"./src/theme/Ionicons\";\nimport { FontAwesomeIconsPack } from \"./src/theme/fontawesome\";\nimport { AppNavigator } from \"./src/navigation/navigation\";\nimport { ThemeContext } from \"./src/theme/theme-context\";\nimport { default as themes } from \"./src/theme/custom-theme.json\";\nimport { default as mapping } from \"./mapping.json\";\n// pack='feather' hidden={true} dark, (eva[theme]),\n\nconst customFonts = {\n  Proxima: require(\"./assets/fonts/proxima-Regular.ttf\"),\n  ProximaSemi: require(\"./assets/fonts/proxima-SemiBold.ttf\"),\n  ProximaBold: require(\"./assets/fonts/proxima-Bold.otf\"),\n  Vibur: require(\"./assets/fonts/Vibur-Regular.ttf\"),\n  Brassmono: require(\"./assets/fonts/brass-mono.otf\"),\n  Sanfrancisco: require(\"./assets/fonts/SanFrancisco.ttf\"),\n  Sofia: require(\"./assets/fonts/SofiaPro-Medium.ttf\"),\n};\n\nconst Loaded = () => {\n  const [isLoaded] = useFonts(customFonts);\n  if (!isLoaded) {\n    return <AppLoading />;\n  }\n  // from the custom App we return the component we assigned to RootApp.\n  return <AppNavigator />;\n};\n\nexport default function App() {\n  const [theme, setTheme] = React.useState(\"light\");\n\n  const toggleTheme = () => {\n    const nextTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(nextTheme);\n  };\n\n  return (\n    <>\n      <IconRegistry\n        icons={[\n          EvaIconsPack,\n          FeatherIconsPack,\n          IoniconsIconsPack,\n          FontAwesomeIconsPack,\n        ]}\n      />\n      <ThemeContext.Provider value={{ theme, toggleTheme }}>\n        <ApplicationProvider\n          {...eva}\n          theme={{ ...eva[theme], ...themes }}\n          customMapping={mapping}\n        >\n          <Loaded />\n          {/* <StatusBar style=\"auto\" /> */}\n        </ApplicationProvider>\n      </ThemeContext.Provider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}