{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/software/work/rn-first-test/src/screens/Home.js\";\n\nimport React from \"react\";\nimport { Layout, Text, Icon, Button, useStyleSheet, StyleService } from \"@ui-kitten/components\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { BlurView } from \"expo-blur\";\nimport { ToggleTheme, Playlist_1, Playlist_2, Playlist_3, Playlist_4, Category_1 } from \"../components/Home\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Constants from \"expo-constants\";\nimport { playlist } from \"../test/test-playlist\";\nimport { artist } from \"../test/test-artist\";\n\nvar Arrow = function Arrow(props) {\n  return React.createElement(Icon, _extends({\n    name: \"arrow-ios-forward-outline\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 26\n    }\n  }));\n};\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport var HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var navigateDetails = function navigateDetails() {\n    navigation.navigate(\"Settings\");\n  };\n\n  var sliced = playlist.slice(0, 4);\n  var styles = useStyleSheet(themedStyles);\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      marginTop: Constants.statusBarHeight\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Layout, {\n    style: {\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.plainTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    category: \"h6\",\n    style: styles.mainTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Recommended Release\"), React.createElement(Icon, {\n    style: {\n      height: 20,\n      width: 20\n    },\n    fill: \"#8F9BB3\",\n    name: \"arrow-ios-forward-outline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, shuffle(playlist).map(function (res) {\n    return React.createElement(Playlist_1, {\n      id: res.id,\n      key: res.id,\n      data: res,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 24\n      }\n    });\n  }))))));\n};\nvar themedStyles = StyleService.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  mainTitle: {\n    fontFamily: \"ProximaBold\"\n  },\n  nonBlurredContent: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    height: 20,\n    width: 20\n  },\n  plainTitle: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginHorizontal: 15,\n    justifyContent: \"space-between\",\n    paddingTop: 10,\n    paddingBottom: 10\n  }\n});","map":{"version":3,"sources":["/home/software/work/rn-first-test/src/screens/Home.js"],"names":["React","Layout","Text","Icon","Button","useStyleSheet","StyleService","BlurView","ToggleTheme","Playlist_1","Playlist_2","Playlist_3","Playlist_4","Category_1","Constants","playlist","artist","Arrow","props","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","HomeScreen","navigation","navigateDetails","navigate","sliced","slice","styles","themedStyles","flex","marginTop","statusBarHeight","marginBottom","plainTitle","mainTitle","height","width","map","res","id","create","container","alignItems","justifyContent","fontFamily","nonBlurredContent","icon","flexDirection","marginHorizontal","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Layout,\n  Text,\n  Icon,\n  Button,\n  useStyleSheet,\n  StyleService,\n} from \"@ui-kitten/components\";\nimport { Image, StyleSheet, View } from \"react-native\";\nimport { ScrollView } from \"react-native\";\nimport { BlurView } from \"expo-blur\";\nimport {\n  ToggleTheme,\n  Playlist_1,\n  Playlist_2,\n  Playlist_3,\n  Playlist_4,\n  Category_1,\n} from \"../components/Home\";\nimport { SafeAreaView } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { playlist } from \"../test/test-playlist\";\nimport { artist } from \"../test/test-artist\";\n\nconst Arrow = (props) => <Icon name=\"arrow-ios-forward-outline\" {...props} />;\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport const HomeScreen = ({ navigation }) => {\n  const navigateDetails = () => {\n    navigation.navigate(\"Settings\");\n  };\n  const sliced = playlist.slice(0, 4);\n\n  const styles = useStyleSheet(themedStyles);\n  return (\n    <SafeAreaView style={{ flex: 1, marginTop: Constants.statusBarHeight }}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Layout>\n          {/* PLAYLIST 4 */}\n          {/* <Layout style={{ marginBottom: 10 }}>\n            <View style={styles.plainTitle}>\n              <Text category=\"h6\" style={styles.mainTitle}>\n                Made for you\n              </Text>\n              <Icon\n                style={{ height: 20, width: 20 }}\n                fill=\"#8F9BB3\"\n                name=\"arrow-ios-forward-outline\"\n              />\n            </View>\n            <ScrollView\n              horizontal={true}\n              showsHorizontalScrollIndicator={false}\n            >\n              <Playlist_4 />\n            </ScrollView>\n          </Layout> */}\n\n          {/* PLAYLIST 1 */}\n          <Layout style={{ marginBottom: 10 }}>\n            <View style={styles.plainTitle}>\n              <Text category=\"h6\" style={styles.mainTitle}>\n                Recommended Release\n              </Text>\n              <Icon\n                style={{ height: 20, width: 20 }}\n                fill=\"#8F9BB3\"\n                name=\"arrow-ios-forward-outline\"\n              />\n            </View>\n            <ScrollView\n              horizontal={true}\n              showsHorizontalScrollIndicator={false}\n            >\n              {shuffle(playlist).map((res) => {\n                return <Playlist_1 id={res.id} key={res.id} data={res} />;\n              })}\n            </ScrollView>\n          </Layout>\n\n          {/* CATEGORY 1 */}\n          {/* <Layout style={{ marginBottom: 10 }}>\n            <ScrollView\n              horizontal={true}\n              showsHorizontalScrollIndicator={false}\n            >\n              {artist.map((res) => {\n                return <Category_1 id={res.id} key={res.id} data={res} />;\n              })}\n            </ScrollView>\n          </Layout> */}\n\n          {/* FOUR IN ONE */}\n          {/* <Layout style={{ marginBottom: 10 }}>\n            <View style={styles.plainTitle}>\n              <Text category=\"h6\" style={styles.mainTitle}>\n                Recommended playlist\n              </Text>\n              <Icon\n                style={{ height: 20, width: 20 }}\n                fill=\"#8F9BB3\"\n                name=\"arrow-ios-forward-outline\"\n              />\n            </View>\n            <View style={{ flex: 1, flexWrap: \"wrap\", flexDirection: \"row\" }}>\n              {sliced.map((res) => {\n                return <Playlist_1 id={res.id} key={res.id} data={res} />;\n              })}\n            </View>\n            <Layout\n              style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginBottom: 10,\n              }}\n            >\n              <Button\n                appearance=\"outline\"\n                style={{ width: 250, borderRadius: 50 }}\n                // accessoryRight={Arrow}\n              >\n                View all\n              </Button>\n            </Layout>\n          </Layout> */}\n\n          {/* PLAYLIST 1 AGAIN */}\n          {/* <Layout style={{ marginBottom: 10 }}>\n            <View style={styles.plainTitle}>\n              <Text category=\"h6\" style={styles.mainTitle}>\n                Popular release\n              </Text>\n              <Icon\n                style={{ height: 20, width: 20 }}\n                fill=\"#8F9BB3\"\n                name=\"arrow-ios-forward-outline\"\n              />\n            </View>\n            <ScrollView\n              horizontal={true}\n              showsHorizontalScrollIndicator={false}\n            >\n              {shuffle(playlist).map((res) => {\n                return <Playlist_1 id={res.id} key={res.id} data={res} />;\n              })}\n            </ScrollView>\n          </Layout> */}\n\n          {/* PLAYLIST 3 */}\n          {/* <Layout style={{ marginBottom: 10 }}>\n            <View style={styles.plainTitle}>\n              <Text category=\"h6\" style={styles.mainTitle}>\n                Popular playlist\n              </Text>\n              <Icon\n                style={{ height: 20, width: 20 }}\n                fill=\"#8F9BB3\"\n                name=\"arrow-ios-forward-outline\"\n              />\n            </View>\n            <ScrollView\n              horizontal={true}\n              showsHorizontalScrollIndicator={false}\n            >\n              {shuffle(playlist).map((res) => {\n                return <Playlist_3 id={res.id} key={res.id} data={res} />;\n              })}\n            </ScrollView>\n          </Layout> */}\n\n          {/* PLAYLIST 1 FINAL */}\n          {/* <Layout style={{ marginBottom: 10 }}>\n            <View style={styles.plainTitle}>\n              <Text category=\"h6\" style={styles.mainTitle}>\n                Most streamed albums\n              </Text>\n              <Icon\n                style={{ height: 20, width: 20 }}\n                fill=\"#8F9BB3\"\n                name=\"arrow-ios-forward-outline\"\n              />\n            </View>\n            <ScrollView\n              horizontal={true}\n              showsHorizontalScrollIndicator={false}\n            >\n              {shuffle(playlist).map((res) => {\n                return <Playlist_1 id={res.id} key={res.id} data={res} />;\n              })}\n            </ScrollView>\n            <ToggleTheme />\n          </Layout> */}\n        </Layout>\n      </ScrollView>\n\n      {/* <BlurView\n        intensity={50}\n        tint=\"dark\"\n        style={[StyleSheet.absoluteFill, styles.nonBlurredContent]}\n      >\n        <Text>Hello! I am bluring contents underneath</Text>\n      </BlurView> */}\n    </SafeAreaView>\n  );\n};\n\nconst themedStyles = StyleService.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  mainTitle: {\n    fontFamily: \"ProximaBold\",\n  },\n  nonBlurredContent: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    height: 20,\n    width: 20,\n  },\n  plainTitle: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginHorizontal: 15,\n    justifyContent: \"space-between\",\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}