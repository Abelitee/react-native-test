{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/software/work/Challenge/src/screens/Extension.js\";\n\nimport React, { useRef } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Divider, Icon, Layout, Text, TopNavigation, TopNavigationAction, useStyleSheet, StyleService } from \"@ui-kitten/components\";\nimport Swiper from \"react-native-swiper\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport Constants from \"expo-constants\";\nimport { HeaderNav, PlaylistExt_1, ArtistExt_1, TrackExt_1, QueueList } from \"../components/Extension\";\nimport { useFetch } from \"../hooks/fetch\";\nimport { song } from \"../test/test-song\";\nexport var Extension = function Extension(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyleSheet(themedStyles);\n  return React.createElement(SafeAreaView, {\n    style: {\n      marginTop: Constants.statusBarHeight - wp(6)\n    }\n  }, React.createElement(Layout, null, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(HeaderNav, {\n    navigation: navigation\n  }))));\n};\nvar themedStyles = StyleService.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/software/work/Challenge/src/screens/Extension.js"],"names":["React","useRef","Divider","Icon","Layout","Text","TopNavigation","TopNavigationAction","useStyleSheet","StyleService","Swiper","widthPercentageToDP","wp","heightPercentageToDP","hp","Constants","HeaderNav","PlaylistExt_1","ArtistExt_1","TrackExt_1","QueueList","useFetch","song","Extension","navigation","styles","themedStyles","marginTop","statusBarHeight","create","container","flex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;;;AAEA,SACEC,OADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,aALF,EAMEC,mBANF,EAOEC,aAPF,EAQEC,YARF,QASO,uBATP;AAUA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACEC,mBAAmB,IAAIC,EADzB,EAEEC,oBAAoB,IAAIC,EAF1B,QAGO,gCAHP;AAKA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,SACEC,SADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,SALF;AAQA,SAASC,QAAT;AACA,SAASC,IAAT;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC3C,MAAMC,MAAM,GAAGjB,aAAa,CAACkB,YAAD,CAA5B;AACA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAEZ,SAAS,CAACa,eAAV,GAA4BhB,EAAE,CAAC,CAAD;AAA3C;AAArB,KACE,oBAAC,MAAD,QACE,oBAAC,UAAD;AACE,IAAA,4BAA4B,EAAE;AADhC,KAIE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEY;AAAvB,IAJF,CADF,CADF,CADF;AAgBD,CAlBM;AAoBP,IAAME,YAAY,GAAGjB,YAAY,CAACoB,MAAb,CAAoB;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AAD4B,CAApB,CAArB","sourcesContent":["import React, { useRef } from \"react\";\nimport { SafeAreaView, View, Image, ScrollView } from \"react-native\";\nimport {\n  Divider,\n  Icon,\n  Layout,\n  Text,\n  TopNavigation,\n  TopNavigationAction,\n  useStyleSheet,\n  StyleService,\n} from \"@ui-kitten/components\";\nimport Swiper from \"react-native-swiper\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from \"react-native-responsive-screen\";\n\nimport Constants from \"expo-constants\";\n\nimport {\n  HeaderNav,\n  PlaylistExt_1,\n  ArtistExt_1,\n  TrackExt_1,\n  QueueList,\n} from \"../components/Extension\";\n\nimport { useFetch } from \"../hooks/fetch\";\nimport { song } from \"../test/test-song\";\n\nexport const Extension = ({ navigation }) => {\n  const styles = useStyleSheet(themedStyles);\n  return (\n    <SafeAreaView style={{ marginTop: Constants.statusBarHeight - wp(6) }}>\n      <Layout>\n        <ScrollView\n          showsVerticalScrollIndicator={false}\n          //   stickyHeaderIndices={[0]}\n        >\n          <HeaderNav navigation={navigation} />\n          {/* <PlaylistExt_1 /> */}\n          {/* <ArtistExt_1 /> */}\n          {/* <TrackExt_1 /> */}\n          {/* <QueueList /> */}\n        </ScrollView>\n      </Layout>\n    </SafeAreaView>\n  );\n};\n\nconst themedStyles = StyleService.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}