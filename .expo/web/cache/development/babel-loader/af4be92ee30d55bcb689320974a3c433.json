{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/software/work/Challenge/src/components/Button.tsx\";\n\nimport * as React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport StyleGuide from \"./StyleGuide\";\nimport Text from \"./Text\";\nvar styles = StyleSheet.create({\n  container: {\n    padding: StyleGuide.spacing * 2\n  },\n  label: {\n    textAlign: \"center\"\n  }\n});\n\nvar Button = function Button(_ref) {\n  var label = _ref.label,\n      primary = _ref.primary,\n      onPress = _ref.onPress;\n  var color = primary ? \"white\" : undefined;\n  var backgroundColor = primary ? StyleGuide.palette.primary : undefined;\n  return React.createElement(RectButton, {\n    onPress: onPress\n  }, React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: backgroundColor\n    },\n    accessible: true\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    type: \"headline\",\n    style: [styles.label, {\n      color: color\n    }]\n  }, label))));\n};\n\nexport default Button;","map":{"version":3,"sources":["/home/software/work/Challenge/src/components/Button.tsx"],"names":["React","RectButton","StyleGuide","Text","styles","StyleSheet","create","container","padding","spacing","label","textAlign","Button","primary","onPress","color","undefined","backgroundColor","palette"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AAQA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAEN,UAAU,CAACO,OAAX,GAAqB;AADrB,GADoB;AAI/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AAJwB,CAAlB,CAAf;;AASA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA8C;AAAA,MAA3CF,KAA2C,QAA3CA,KAA2C;AAAA,MAApCG,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAC3D,MAAMC,KAAK,GAAGF,OAAO,GAAG,OAAH,GAAaG,SAAlC;AACA,MAAMC,eAAe,GAAGJ,OAAO,GAAGX,UAAU,CAACgB,OAAX,CAAmBL,OAAtB,GAAgCG,SAA/D;AACA,SACE,oBAAC,UAAD,EAAgB;AAAEF,IAAAA,OAAO,EAAPA;AAAF,GAAhB,EACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAfA;AAAF,KAArB;AAA0C,IAAA,UAAU;AAApD,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACG;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,KAAK,EAAE,CAACH,MAAM,CAACM,KAAR,EAAe;AAAEK,MAAAA,KAAK,EAALA;AAAF,KAAf;AAA7B,KACGL,KADH,CADF,CADF,CADF,CADF;AAWD,CAdD;;AAgBA,eAAeE,MAAf","sourcesContent":["import * as React from \"react\";\nimport { SafeAreaView, StyleSheet, View } from \"react-native\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport StyleGuide from \"./StyleGuide\";\nimport Text from \"./Text\";\n\ninterface ButtonProps {\n  label: string;\n  primary?: boolean;\n  onPress: () => void;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: StyleGuide.spacing * 2,\n  },\n  label: {\n    textAlign: \"center\",\n  },\n});\n\nconst Button = ({ label, primary, onPress }: ButtonProps) => {\n  const color = primary ? \"white\" : undefined;\n  const backgroundColor = primary ? StyleGuide.palette.primary : undefined;\n  return (\n    <RectButton {...{ onPress }}>\n      <SafeAreaView style={{ backgroundColor }} accessible>\n        <View style={styles.container}>\n          <Text type=\"headline\" style={[styles.label, { color }]}>\n            {label}\n          </Text>\n        </View>\n      </SafeAreaView>\n    </RectButton>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}