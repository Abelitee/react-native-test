{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nexport var useFetch = function useFetch(url, method, bearer, dependencies) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fetchedData = _useState4[0],\n      setFetchedData = _useState4[1];\n\n  useEffect(function () {\n    setLoading(true);\n    console.log(\"sending http request\");\n    fetch(url, {\n      method: method,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: bearer\n      }\n    }).then(function (response) {\n      if (!response.ok) {\n        throw new Error(\"reaponse\");\n      }\n\n      return response.json();\n    }).then(function (responseJson) {\n      setLoading(false);\n      setFetchedData(responseJson);\n    }).catch(function (error) {\n      setLoading(false);\n      console.log(error);\n    });\n  }, dependencies);\n  return [loading, fetchedData];\n};","map":{"version":3,"sources":["/home/software/work/rn-first-test/src/hooks/fetch.js"],"names":["useState","useEffect","useFetch","url","method","bearer","dependencies","loading","setLoading","fetchedData","setFetchedData","console","log","fetch","headers","Accept","Authorization","then","response","ok","Error","json","responseJson","catch","error"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMC,MAAN,EAAcC,MAAd,EAAsBC,YAAtB,EAAuC;AAAA,kBAC/BN,QAAQ,CAAC,KAAD,CADuB;AAAA;AAAA,MACtDO,OADsD;AAAA,MAC7CC,UAD6C;;AAAA,mBAEvBR,QAAQ,CAAC,IAAD,CAFe;AAAA;AAAA,MAEtDS,WAFsD;AAAA,MAEzCC,cAFyC;;AAI7DT,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAC,IAAAA,KAAK,CAACV,GAAD,EAAM;AACTC,MAAAA,MAAM,EAAEA,MADC;AAETU,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,aAAa,EAAEX;AAHR;AAFA,KAAN,CAAL,CAQGY,IARH,CAQQ,UAACC,QAAD,EAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,UAAV,CAAN;AACD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KAbH,EAcGJ,IAdH,CAcQ,UAACK,YAAD,EAAkB;AACtBd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,cAAc,CAACY,YAAD,CAAd;AACD,KAjBH,EAkBGC,KAlBH,CAkBS,UAACC,KAAD,EAAW;AAChBhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,KArBH;AAsBD,GAzBQ,EAyBNlB,YAzBM,CAAT;AA0BA,SAAO,CAACC,OAAD,EAAUE,WAAV,CAAP;AACD,CA/BM","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useFetch = (url, method, bearer, dependencies) => {\n  const [loading, setLoading] = useState(false);\n  const [fetchedData, setFetchedData] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    console.log(\"sending http request\");\n    fetch(url, {\n      method: method,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: bearer,\n      },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"reaponse\");\n        }\n        return response.json();\n      })\n      .then((responseJson) => {\n        setLoading(false);\n        setFetchedData(responseJson);\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n      });\n  }, dependencies);\n  return [loading, fetchedData];\n};\n"]},"metadata":{},"sourceType":"module"}