{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/software/work/rn-first-test/src/navigation/navigation.js\";\n\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AppLoading from \"expo-app-loading\";\nimport { SettingsScreen } from \"../screens/settings\";\nimport { BottNavigator } from \"../navigation/BottomNav\";\nimport { PlaylistScreen } from \"../screens/Playlist\";\nimport { Player } from \"../screens/Player\";\nimport { ArtistScreen } from \"../screens/Artist\";\nimport { Extension } from \"../screens/Extension\";\nimport { LoginScreen } from \"../screens/Login\";\nimport { ThemeContext } from \"../theme/theme-context\";\n\nvar _createStackNavigator = createStackNavigator(),\n    Navigator = _createStackNavigator.Navigator,\n    Screen = _createStackNavigator.Screen;\n\nvar HomeNavigator = function HomeNavigator() {\n  var themeContext = React.useContext(ThemeContext);\n  var rootRoute = themeContext.success === true && themeContext.success !== null ? \"Player\" : \"Login\";\n  var test = rootRoute;\n  return themeContext.success === null ? React.createElement(React.Fragment, null, React.createElement(AppLoading, null)) : React.createElement(Navigator, {\n    headerMode: \"none\",\n    initialRouteName: rootRoute\n  }, React.createElement(Screen, {\n    name: \"Butt\",\n    component: BottNavigator\n  }), React.createElement(Screen, {\n    name: \"Player\",\n    component: Player\n  }), React.createElement(Screen, {\n    name: \"Extension\",\n    component: Extension\n  }), React.createElement(Screen, {\n    name: \"Artist\",\n    component: ArtistScreen\n  }), React.createElement(Screen, {\n    name: \"Playlist\",\n    component: PlaylistScreen\n  }), React.createElement(Screen, {\n    name: \"Settings\",\n    component: SettingsScreen\n  }), React.createElement(Screen, {\n    name: \"Login\",\n    component: LoginScreen\n  }));\n};\n\nexport var AppNavigator = function AppNavigator() {\n  return React.createElement(NavigationContainer, null, React.createElement(HomeNavigator, null));\n};","map":{"version":3,"sources":["/home/software/work/rn-first-test/src/navigation/navigation.js"],"names":["React","NavigationContainer","createStackNavigator","AppLoading","SettingsScreen","BottNavigator","PlaylistScreen","Player","ArtistScreen","Extension","LoginScreen","ThemeContext","Navigator","Screen","HomeNavigator","themeContext","useContext","rootRoute","success","test","AppNavigator"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT;AACA,SAASC,aAAT;AACA,SAASC,cAAT;AACA,SAASC,MAAT;AACA,SAASC,YAAT;AACA,SAASC,SAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;;4BAE8BT,oBAAoB,E;IAA1CU,S,yBAAAA,S;IAAWC,M,yBAAAA,M;;AAEnB,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,YAAY,GAAGf,KAAK,CAACgB,UAAN,CAAiBL,YAAjB,CAArB;AAEA,MAAMM,SAAS,GACbF,YAAY,CAACG,OAAb,KAAyB,IAAzB,IAAiCH,YAAY,CAACG,OAAb,KAAyB,IAA1D,GACI,QADJ,GAEI,OAHN;AAKA,MAAMC,IAAI,GAAGF,SAAb;AAIA,SAAOF,YAAY,CAACG,OAAb,KAAyB,IAAzB,GACL,0CACE,oBAAC,UAAD,OADF,CADK,GAKL,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAC,MAAtB;AAA6B,IAAA,gBAAgB,EAAED;AAA/C,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAEZ;AAA/B,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEE;AAAjC,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,SAAS,EAAEE;AAApC,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAED;AAAjC,IAJF,EAKE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,SAAS,EAAEF;AAAnC,IALF,EAME,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,SAAS,EAAEF;AAAnC,IANF,EAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,SAAS,EAAEM;AAAhC,IAPF,CALF;AAeD,CA3BD;;AA6BA,OAAO,IAAMU,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SACE,oBAAC,mBAAD,QACE,oBAAC,aAAD,OADF,CADF;AAKD,CANM","sourcesContent":["import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AppLoading from \"expo-app-loading\";\nimport { SettingsScreen } from \"../screens/settings\";\nimport { BottNavigator } from \"../navigation/BottomNav\";\nimport { PlaylistScreen } from \"../screens/Playlist\";\nimport { Player } from \"../screens/Player\";\nimport { ArtistScreen } from \"../screens/Artist\";\nimport { Extension } from \"../screens/Extension\";\nimport { LoginScreen } from \"../screens/Login\";\nimport { ThemeContext } from \"../theme/theme-context\";\n\nconst { Navigator, Screen } = createStackNavigator();\n\nconst HomeNavigator = () => {\n  const themeContext = React.useContext(ThemeContext);\n\n  const rootRoute =\n    themeContext.success === true && themeContext.success !== null\n      ? \"Player\"\n      : \"Login\";\n\n  const test = rootRoute;\n  // console.log(themeContext.success);\n  // console.log(themeContext.userInfo);\n\n  return themeContext.success === null ? (\n    <>\n      <AppLoading />\n    </>\n  ) : (\n    <Navigator headerMode=\"none\" initialRouteName={rootRoute}>\n      <Screen name=\"Butt\" component={BottNavigator} />\n      <Screen name=\"Player\" component={Player} />\n      <Screen name=\"Extension\" component={Extension} />\n      <Screen name=\"Artist\" component={ArtistScreen} />\n      <Screen name=\"Playlist\" component={PlaylistScreen} />\n      <Screen name=\"Settings\" component={SettingsScreen} />\n      <Screen name=\"Login\" component={LoginScreen} />\n    </Navigator>\n  );\n};\n\nexport const AppNavigator = () => {\n  return (\n    <NavigationContainer>\n      <HomeNavigator />\n    </NavigationContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}