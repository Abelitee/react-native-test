{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/software/work/rn-first-test/src/screens/Artist.js\";\n\nimport React, { useRef } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Divider, Icon, Layout, Text, TopNavigation, TopNavigationAction, useStyleSheet, StyleService } from \"@ui-kitten/components\";\nimport Swiper from \"react-native-swiper\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport Constants from \"expo-constants\";\nimport { ArtistSwiper, IconContainer, TopTracks, MusicVideo, ArtistSlider, ArtistAlbums, ArtistPlaylists, HotTracks } from \"../components/Artist\";\nimport { useFetch } from \"../hooks/fetch\";\nexport var ArtistScreen = function ArtistScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var BackIcon = function BackIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"arrow-ios-back-outline\"\n    }));\n  };\n\n  var EllipsisIcon = function EllipsisIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"more-horizontal\"\n    }));\n  };\n\n  var navigateButt = function navigateButt() {\n    navigation.navigate(\"Butt\");\n  };\n\n  var BackAction = function BackAction() {\n    return React.createElement(TopNavigationAction, {\n      icon: BackIcon,\n      onPress: navigateButt\n    });\n  };\n\n  var EllipsisAction = function EllipsisAction() {\n    return React.createElement(TopNavigationAction, {\n      icon: EllipsisIcon,\n      onPress: navigateButt\n    });\n  };\n\n  var styles = useStyleSheet(themedStyles);\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  React.useEffect(function () {\n    fetch(\"https://gmp-app.herokuapp.com/welcome\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmY2JhMzVlMTRlMWFiMTllNDk2N2Y0NCIsIm5hbWUiOiJzdHJpbmciLCJpYXQiOjE2MDg2MjUwNTgsImV4cCI6MTY1MTgyNTA1OH0.rcRSV5K0_BABNanmV_iiRtX-xcrjNMwh_QhfMAxS0sc\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setData(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: {\n      marginTop: Constants.statusBarHeight\n    }\n  }, React.createElement(Layout, null, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(TopNavigation, {\n    appearance: \"control\",\n    accessoryLeft: BackAction,\n    accessoryRight: EllipsisAction\n  }), React.createElement(ArtistSwiper, {\n    id: data,\n    key: data,\n    data: data\n  }), React.createElement(IconContainer, null), React.createElement(TopTracks, {\n    navigation: navigation\n  }), React.createElement(ArtistAlbums, null), React.createElement(HotTracks, null), React.createElement(MusicVideo, null), React.createElement(ArtistSlider, null), React.createElement(ArtistPlaylists, null))));\n};\nvar themedStyles = StyleService.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/software/work/rn-first-test/src/screens/Artist.js"],"names":["React","useRef","Divider","Icon","Layout","Text","TopNavigation","TopNavigationAction","useStyleSheet","StyleService","Swiper","widthPercentageToDP","wp","heightPercentageToDP","hp","Constants","ArtistSwiper","IconContainer","TopTracks","MusicVideo","ArtistSlider","ArtistAlbums","ArtistPlaylists","HotTracks","useFetch","ArtistScreen","navigation","BackIcon","props","EllipsisIcon","navigateButt","navigate","BackAction","EllipsisAction","styles","themedStyles","useState","data","setData","useEffect","fetch","method","headers","Accept","Authorization","then","response","json","responseJson","catch","error","console","marginTop","statusBarHeight","create","container","flex"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;;;AAEA,SACEC,OADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,aALF,EAMEC,mBANF,EAOEC,aAPF,EAQEC,YARF,QASO,uBATP;AAUA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACEC,mBAAmB,IAAIC,EADzB,EAEEC,oBAAoB,IAAIC,EAF1B,QAGO,gCAHP;AAKA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,eAPF,EAQEC,SARF;AAWA,SAASC,QAAT;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC9C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,WAAW,oBAAC,IAAD,eAAUA,KAAV;AAAiB,MAAA,IAAI,EAAC;AAAtB,OAAX;AAAA,GAAjB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,KAAD;AAAA,WAAW,oBAAC,IAAD,eAAUA,KAAV;AAAiB,MAAA,IAAI,EAAC;AAAtB,OAAX;AAAA,GAArB;;AACA,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBJ,IAAAA,UAAU,CAACK,QAAX,CAAoB,MAApB;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WACjB,oBAAC,mBAAD;AAAqB,MAAA,IAAI,EAAEL,QAA3B;AAAqC,MAAA,OAAO,EAAEG;AAA9C,MADiB;AAAA,GAAnB;;AAIA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WACrB,oBAAC,mBAAD;AAAqB,MAAA,IAAI,EAAEJ,YAA3B;AAAyC,MAAA,OAAO,EAAEC;AAAlD,MADqB;AAAA,GAAvB;;AAIA,MAAMI,MAAM,GAAG1B,aAAa,CAAC2B,YAAD,CAA5B;;AAf8C,wBAiBtBnC,KAAK,CAACoC,QAAN,CAAe,EAAf,CAjBsB;AAAA;AAAA,MAiBvCC,IAjBuC;AAAA,MAiBjCC,OAjBiC;;AAmB9CtC,EAAAA,KAAK,CAACuC,SAAN,CAAgB,YAAM;AACpBC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,MAAAA,MAAM,EAAE,KADqC;AAE7CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,aAAa,EACX;AAJK;AAFoC,KAA1C,CAAL,CASGC,IATH,CASQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KATR,EAUGF,IAVH,CAUQ,UAACG,YAAD,EAAkB;AACtBV,MAAAA,OAAO,CAACU,YAAD,CAAP;AACD,KAZH,EAaGC,KAbH,CAaS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAfH;AAgBD,GAjBD,EAiBG,EAjBH;AAkCA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAErC,SAAS,CAACsC;AAAvB;AAArB,KACE,oBAAC,MAAD,QACE,oBAAC,UAAD;AACE,IAAA,4BAA4B,EAAE;AADhC,KAIE,oBAAC,aAAD;AACE,IAAA,UAAU,EAAC,SADb;AAEE,IAAA,aAAa,EAAErB,UAFjB;AAGE,IAAA,cAAc,EAAEC;AAHlB,IAJF,EASE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEI,IAAlB;AAAwB,IAAA,GAAG,EAAEA,IAA7B;AAAmC,IAAA,IAAI,EAAEA;AAAzC,IATF,EAUE,oBAAC,aAAD,OAVF,EAWE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEX;AAAvB,IAXF,EAYE,oBAAC,YAAD,OAZF,EAaE,oBAAC,SAAD,OAbF,EAcE,oBAAC,UAAD,OAdF,EAeE,oBAAC,YAAD,OAfF,EAgBE,oBAAC,eAAD,OAhBF,CADF,CADF,CADF;AAwBD,CA7EM;AA+EP,IAAMS,YAAY,GAAG1B,YAAY,CAAC6C,MAAb,CAAoB;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AAD4B,CAApB,CAArB","sourcesContent":["import React, { useRef } from \"react\";\nimport { SafeAreaView, View, Image, ScrollView } from \"react-native\";\nimport {\n  Divider,\n  Icon,\n  Layout,\n  Text,\n  TopNavigation,\n  TopNavigationAction,\n  useStyleSheet,\n  StyleService,\n} from \"@ui-kitten/components\";\nimport Swiper from \"react-native-swiper\";\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from \"react-native-responsive-screen\";\n\nimport Constants from \"expo-constants\";\n\nimport {\n  ArtistSwiper,\n  IconContainer,\n  TopTracks,\n  MusicVideo,\n  ArtistSlider,\n  ArtistAlbums,\n  ArtistPlaylists,\n  HotTracks,\n} from \"../components/Artist\";\n\nimport { useFetch } from \"../hooks/fetch\";\n\nexport const ArtistScreen = ({ navigation }) => {\n  const BackIcon = (props) => <Icon {...props} name=\"arrow-ios-back-outline\" />;\n  const EllipsisIcon = (props) => <Icon {...props} name=\"more-horizontal\" />;\n  const navigateButt = () => {\n    navigation.navigate(\"Butt\");\n  };\n\n  const BackAction = () => (\n    <TopNavigationAction icon={BackIcon} onPress={navigateButt} />\n  );\n\n  const EllipsisAction = () => (\n    <TopNavigationAction icon={EllipsisIcon} onPress={navigateButt} />\n  );\n\n  const styles = useStyleSheet(themedStyles);\n\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(\"https://gmp-app.herokuapp.com/welcome\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmY2JhMzVlMTRlMWFiMTllNDk2N2Y0NCIsIm5hbWUiOiJzdHJpbmciLCJpYXQiOjE2MDg2MjUwNTgsImV4cCI6MTY1MTgyNTA1OH0.rcRSV5K0_BABNanmV_iiRtX-xcrjNMwh_QhfMAxS0sc\",\n      },\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        setData(responseJson);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  // const renderCount = useRef(0);\n  // renderCount.current = renderCount.current + 1;\n\n  // console.log(renderCount.current);\n\n  // const [loading, fetchedData] = useFetch(\n  //   \"https://gmp-app.herokuapp.com/welcome\",\n  //   \"GET\",\n  //   \"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmY2JhMzVlMTRlMWFiMTllNDk2N2Y0NCIsIm5hbWUiOiJzdHJpbmciLCJpYXQiOjE2MDg3NTE4NDksImV4cCI6MTY1MTk1MTg0OX0.qHRn7Dnawbu0lgSv5dBY9HEg5wm97GCNuaSpRZDSy3M\",\n  //   []\n  // );\n\n  // const data = fetchedData ? fetchedData : [];\n\n  // console.log(data);\n  return (\n    <SafeAreaView style={{ marginTop: Constants.statusBarHeight }}>\n      <Layout>\n        <ScrollView\n          showsVerticalScrollIndicator={false}\n          //   stickyHeaderIndices={[0]}\n        >\n          <TopNavigation\n            appearance=\"control\"\n            accessoryLeft={BackAction}\n            accessoryRight={EllipsisAction}\n          />\n          <ArtistSwiper id={data} key={data} data={data} />\n          <IconContainer />\n          <TopTracks navigation={navigation} />\n          <ArtistAlbums />\n          <HotTracks />\n          <MusicVideo />\n          <ArtistSlider />\n          <ArtistPlaylists />\n        </ScrollView>\n      </Layout>\n    </SafeAreaView>\n  );\n};\n\nconst themedStyles = StyleService.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}