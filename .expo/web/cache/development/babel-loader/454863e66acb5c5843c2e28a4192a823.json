{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/software/work/rn-first-test/src/screens/Home.js\";\n\nimport React from \"react\";\nimport { Layout, Text, Icon, Button, useStyleSheet, StyleService } from \"@ui-kitten/components\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { ToggleTheme, Module_1, Module_2, Module_3, Module_4, ModuleMini_1, RecPlaylist, PopPlaylist, HotTracks, PopRelease, MostAlbums } from \"../components/Home\";\nimport { TrackSlider } from \"../components/General\";\nimport Constants from \"expo-constants\";\nimport { playlist } from \"../test/test-playlist\";\nimport { artist } from \"../test/test-artist\";\n\nvar Arrow = function Arrow(props) {\n  return React.createElement(Icon, _extends({\n    name: \"arrow-ios-forward-outline\"\n  }, props));\n};\n\nexport var HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyleSheet(themedStyles);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      setTimeout(resolve, timeout);\n    });\n  };\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n\n  var navigateDetails = function navigateDetails() {\n    navigation.navigate(\"Settings\");\n  };\n\n  var sliced = playlist.slice(0, 4);\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      marginTop: Constants.statusBarHeight\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    nestedScrollEnabled: true,\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    })\n  }, React.createElement(Layout, null, React.createElement(Module_4, null), React.createElement(Module_1, {\n    navigation: navigation\n  }), React.createElement(HotTracks, null), React.createElement(ModuleMini_1, null), React.createElement(RecPlaylist, null), React.createElement(PopRelease, null), React.createElement(PopPlaylist, null), React.createElement(MostAlbums, null))));\n};\nvar themedStyles = StyleService.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  mainTitle: {\n    fontFamily: \"ProximaBold\"\n  },\n  nonBlurredContent: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    height: 20,\n    width: 20\n  },\n  plainTitle: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginHorizontal: 15,\n    justifyContent: \"space-between\",\n    paddingTop: 10,\n    paddingBottom: 10\n  }\n});","map":{"version":3,"sources":["/home/software/work/rn-first-test/src/screens/Home.js"],"names":["React","Layout","Text","Icon","Button","useStyleSheet","StyleService","ToggleTheme","Module_1","Module_2","Module_3","Module_4","ModuleMini_1","RecPlaylist","PopPlaylist","HotTracks","PopRelease","MostAlbums","TrackSlider","Constants","playlist","artist","Arrow","props","HomeScreen","navigation","styles","themedStyles","useState","refreshing","setRefreshing","wait","timeout","Promise","resolve","setTimeout","onRefresh","useCallback","then","navigateDetails","navigate","sliced","slice","flex","marginTop","statusBarHeight","create","container","alignItems","justifyContent","mainTitle","fontFamily","nonBlurredContent","icon","height","width","plainTitle","flexDirection","marginHorizontal","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Layout,\n  Text,\n  Icon,\n  Button,\n  useStyleSheet,\n  StyleService,\n} from \"@ui-kitten/components\";\nimport {\n  Image,\n  StyleSheet,\n  View,\n  RefreshControl,\n  ScrollView,\n  SafeAreaView,\n} from \"react-native\";\nimport {\n  ToggleTheme,\n  Module_1,\n  Module_2,\n  Module_3,\n  Module_4,\n  ModuleMini_1,\n  RecPlaylist,\n  PopPlaylist,\n  HotTracks,\n  PopRelease,\n  MostAlbums,\n} from \"../components/Home\";\n\nimport { TrackSlider } from \"../components/General\";\nimport Constants from \"expo-constants\";\nimport { playlist } from \"../test/test-playlist\";\nimport { artist } from \"../test/test-artist\";\n\nconst Arrow = (props) => <Icon name=\"arrow-ios-forward-outline\" {...props} />;\n\nexport const HomeScreen = ({ navigation }) => {\n  const styles = useStyleSheet(themedStyles);\n  // REFRESH THE SCREEN\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  const wait = (timeout) => {\n    return new Promise((resolve) => {\n      setTimeout(resolve, timeout);\n    });\n  };\n\n  const onRefresh = React.useCallback(() => {\n    setRefreshing(true);\n\n    wait(2000).then(() => setRefreshing(false));\n  }, []);\n\n  const navigateDetails = () => {\n    navigation.navigate(\"Settings\");\n  };\n  const sliced = playlist.slice(0, 4);\n\n  return (\n    <SafeAreaView style={{ flex: 1, marginTop: Constants.statusBarHeight }}>\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        nestedScrollEnabled={true}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        <Layout>\n          {/* PLAYLIST 4 */}\n          <Module_4 />\n\n          {/* PLAYLIST 1 */}\n          <Module_1 navigation={navigation} />\n\n          {/* HOT TRACKS */}\n          <HotTracks />\n\n          {/* CATEGORY 1 */}\n          <ModuleMini_1 />\n\n          {/* FOUR IN ONE */}\n          <RecPlaylist />\n\n          {/* PLAYLIST 1 AGAIN */}\n          <PopRelease />\n\n          {/* PLAYLIST 3 */}\n          <PopPlaylist />\n\n          {/* PLAYLIST 1 FINAL */}\n          <MostAlbums />\n        </Layout>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst themedStyles = StyleService.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  mainTitle: {\n    fontFamily: \"ProximaBold\",\n  },\n  nonBlurredContent: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    height: 20,\n    width: 20,\n  },\n  plainTitle: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginHorizontal: 15,\n    justifyContent: \"space-between\",\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}